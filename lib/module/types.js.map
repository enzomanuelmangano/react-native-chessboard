{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["/* eslint-disable no-undef */\r\n\r\nimport type { ChessInstance, Square } from 'chess.js';\r\n\r\ntype Player = ReturnType<ChessInstance['turn']>;\r\ntype Type = 'q' | 'r' | 'n' | 'b' | 'k' | 'p';\r\ntype PieceType = `${Player}${Type}`;\r\n\r\ntype PiecesType = Record<PieceType, ReturnType<typeof require>>;\r\ntype Vector<T = number> = {\r\n  x: T;\r\n  y: T;\r\n};\r\n\r\ntype ChessMove = {\r\n  from: Square;\r\n  to: Square;\r\n};\r\n\r\ntype MoveType = { from: Square; to: Square };\r\n\r\nexport type {\r\n  Player,\r\n  Type,\r\n  PieceType,\r\n  PiecesType,\r\n  Vector,\r\n  ChessMove,\r\n  MoveType,\r\n};\r\n"],"mappings":""}