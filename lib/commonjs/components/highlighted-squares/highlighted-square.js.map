{"version":3,"names":["HighlightedSquareComponent","React","forwardRef","ref","style","colors","lastMoveHighlight","useChessboardProps","backgroundColor","useSharedValue","isHighlighted","useImperativeHandle","reset","value","highlight","bg","rHighlightedSquareStyle","useAnimatedStyle","opacity","withTiming","styles","highlightedSquare","StyleSheet","create","position","aspectRatio","HighlightedSquare","memo"],"sources":["highlighted-square.tsx"],"sourcesContent":["import React, { useImperativeHandle } from 'react';\r\nimport { StyleProp, StyleSheet, ViewStyle } from 'react-native';\r\nimport Animated, {\r\n  useAnimatedStyle,\r\n  useSharedValue,\r\n  withTiming,\r\n} from 'react-native-reanimated';\r\nimport { useChessboardProps } from '../../context/props-context/hooks';\r\n\r\ntype HighlightedSquareProps = {\r\n  style?: StyleProp<ViewStyle>;\r\n};\r\n\r\nexport type HighlightedSquareRefType = {\r\n  isHighlighted: () => boolean;\r\n  reset: () => void;\r\n  highlight: (_?: { backgroundColor?: string }) => void;\r\n};\r\n\r\nconst HighlightedSquareComponent = React.forwardRef<\r\n  HighlightedSquareRefType,\r\n  HighlightedSquareProps\r\n>(({ style }, ref) => {\r\n  const {\r\n    colors: { lastMoveHighlight },\r\n  } = useChessboardProps();\r\n  const backgroundColor = useSharedValue(lastMoveHighlight);\r\n  const isHighlighted = useSharedValue(false);\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => ({\r\n      reset: () => {\r\n        isHighlighted.value = false;\r\n      },\r\n      highlight: ({ backgroundColor: bg } = {}) => {\r\n        backgroundColor.value = bg ?? lastMoveHighlight;\r\n        isHighlighted.value = true;\r\n      },\r\n      isHighlighted: () => isHighlighted.value,\r\n    }),\r\n    [backgroundColor, isHighlighted, lastMoveHighlight]\r\n  );\r\n\r\n  const rHighlightedSquareStyle = useAnimatedStyle(() => {\r\n    return {\r\n      opacity: withTiming(isHighlighted.value ? 1 : 0),\r\n      backgroundColor: backgroundColor.value,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Animated.View\r\n      style={[styles.highlightedSquare, style, rHighlightedSquareStyle]}\r\n    />\r\n  );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  highlightedSquare: {\r\n    position: 'absolute',\r\n    aspectRatio: 1,\r\n  },\r\n});\r\n\r\nconst HighlightedSquare = React.memo(HighlightedSquareComponent);\r\n\r\nexport { HighlightedSquare };\r\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAKA;;;;;;AAYA,MAAMA,0BAA0B,gBAAGC,cAAA,CAAMC,UAAN,CAGjC,OAAYC,GAAZ,KAAoB;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EACpB,MAAM;IACJC,MAAM,EAAE;MAAEC;IAAF;EADJ,IAEF,IAAAC,yBAAA,GAFJ;EAGA,MAAMC,eAAe,GAAG,IAAAC,qCAAA,EAAeH,iBAAf,CAAxB;EACA,MAAMI,aAAa,GAAG,IAAAD,qCAAA,EAAe,KAAf,CAAtB;EAEA,IAAAE,0BAAA,EACER,GADF,EAEE,OAAO;IACLS,KAAK,EAAE,MAAM;MACXF,aAAa,CAACG,KAAd,GAAsB,KAAtB;IACD,CAHI;IAILC,SAAS,EAAE,YAAkC;MAAA,IAAjC;QAAEN,eAAe,EAAEO;MAAnB,CAAiC,uEAAP,EAAO;MAC3CP,eAAe,CAACK,KAAhB,GAAwBE,EAAxB,aAAwBA,EAAxB,cAAwBA,EAAxB,GAA8BT,iBAA9B;MACAI,aAAa,CAACG,KAAd,GAAsB,IAAtB;IACD,CAPI;IAQLH,aAAa,EAAE,MAAMA,aAAa,CAACG;EAR9B,CAAP,CAFF,EAYE,CAACL,eAAD,EAAkBE,aAAlB,EAAiCJ,iBAAjC,CAZF;EAeA,MAAMU,uBAAuB,GAAG,IAAAC,uCAAA,EAAiB,MAAM;IACrD,OAAO;MACLC,OAAO,EAAE,IAAAC,iCAAA,EAAWT,aAAa,CAACG,KAAd,GAAsB,CAAtB,GAA0B,CAArC,CADJ;MAELL,eAAe,EAAEA,eAAe,CAACK;IAF5B,CAAP;EAID,CAL+B,EAK7B,EAL6B,CAAhC;EAOA,oBACE,6BAAC,8BAAD,CAAU,IAAV;IACE,KAAK,EAAE,CAACO,MAAM,CAACC,iBAAR,EAA2BjB,KAA3B,EAAkCY,uBAAlC;EADT,EADF;AAKD,CArCkC,CAAnC;;AAuCA,MAAMI,MAAM,GAAGE,uBAAA,CAAWC,MAAX,CAAkB;EAC/BF,iBAAiB,EAAE;IACjBG,QAAQ,EAAE,UADO;IAEjBC,WAAW,EAAE;EAFI;AADY,CAAlB,CAAf;;AAOA,MAAMC,iBAAiB,gBAAGzB,cAAA,CAAM0B,IAAN,CAAW3B,0BAAX,CAA1B"}